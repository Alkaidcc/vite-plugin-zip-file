"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const e=require("path"),i=require("fs"),q=require("node:module"),w=q.createRequire(typeof document>"u"?new(require("url")).URL("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("index.cjs",document.baseURI).href),r=e.sep,{cwd:y}=process,P={enabled:!0,folderPath:e.join(y(),"/dist"),outPath:e.resolve(y()),zipName:""},Z=h=>{let S={...P,...h},{enabled:l,folderPath:c,outPath:s,zipName:n}=S;if(l=Boolean(l),!c||!s)throw new Error("config.folderPath and config.outPath is required.");c=e.resolve(c),s=e.resolve(s),n=n||c.split(r).pop()+".zip";const v=()=>{const g=w("jszip"),d=new g,f=function(t,o,p=""){const j=i.readdirSync(o);p+=o.split(r).pop()+r,j.forEach(m=>{const u=e.join(o,r,m);i.statSync(u).isDirectory()?f(t,u,p):t.file(p+m,i.readFileSync(u))})},a=(t=n)=>{const o=e.join(s,r+t);i.existsSync(o)&&i.unlinkSync(o)},b=function(){f(d,c),d.generateAsync({type:"nodebuffer",compression:"DEFLATE",compressionOptions:{level:9}}).then(t=>{a(n),i.writeFileSync(e.join(s,r,n),t)})};a(n),b()};return{name:"vite-plugin-zip-file",apply:"build",closeBundle(){l&&v()}}};exports.viteZip=Z;
